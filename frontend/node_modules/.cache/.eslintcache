[{"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/index.js":"1","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/components/Notification.js":"2","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Profile.js":"3","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Regsitration.js":"4","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/LoginPage.js":"5","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Settings.js":"6","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/components/Navigationbar.js":"7","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Home.js":"8","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/App.js":"9","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/hocs/layout.js":"10","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/hocs/Layout.js":"11","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/store.js":"12","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/reducers/index.js":"13","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/reducers/auth.js":"14","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/actions/types.js":"15","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/actions/auth.js":"16","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Default.js":"17"},{"size":255,"mtime":1667687023514,"results":"18","hashOfConfig":"19"},{"size":119,"mtime":1667257518129,"results":"20","hashOfConfig":"19"},{"size":101,"mtime":1667244152000,"results":"21","hashOfConfig":"19"},{"size":3678,"mtime":1667694450490,"results":"22","hashOfConfig":"19"},{"size":2008,"mtime":1667685145626,"results":"23","hashOfConfig":"19"},{"size":3785,"mtime":1668398168481,"results":"24","hashOfConfig":"19"},{"size":3304,"mtime":1667694179379,"results":"25","hashOfConfig":"19"},{"size":92,"mtime":1667244152000,"results":"26","hashOfConfig":"19"},{"size":1079,"mtime":1667694251967,"results":"27","hashOfConfig":"19"},{"size":212,"mtime":1667679671413,"results":"28","hashOfConfig":"19"},{"size":536,"mtime":1667694515189,"results":"29","hashOfConfig":"19"},{"size":410,"mtime":1667684246810,"results":"30","hashOfConfig":"19"},{"size":113,"mtime":1667682836922,"results":"31","hashOfConfig":"19"},{"size":2316,"mtime":1667694621793,"results":"32","hashOfConfig":"19"},{"size":818,"mtime":1667682424616,"results":"33","hashOfConfig":"19"},{"size":5004,"mtime":1667691359814,"results":"34","hashOfConfig":"19"},{"size":941,"mtime":1667688119043,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1f8jao4",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"39"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"39"},"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/index.js",[],[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/components/Notification.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Profile.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Regsitration.js",["94","95"],[],"import React, { useState} from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\nimport {signup} from \"../actions/auth\";\n\nconst Register =  ({signup, isAuthenticated}) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n      email : '',\n      first_name: '',\n      last_name: '',\n      password: '',\n      c_password: ''\n    });\n    const{email, first_name, last_name, password, c_password} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e =>{\n      e.preventDefault();\n\n      if(password === c_password){\n          signup(first_name, last_name, email, password, c_password);\n          setAccountCreated(true);\n      }\n    }\n\n    if (isAuthenticated) {\n        return <Navigate to='/' />\n    }\n    if (accountCreated) {\n        return <Navigate to='/login' />\n    }\n\n\n  return (\n      <div className = \"color-overlay d-flex justify-content-center align-items-center\">\n      <Form className={\"rounded p-4 p-sm-3\"} onSubmit={e => onSubmit(e)}>\n          <h1>Register</h1>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              placeholder=\"Enter Email\"\n              type=\"email\"\n              name = \"email\"\n              onChange={e => onChange(e)}\n              value = {email}\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              className=\"firstName\"\n              placeholder=\"Enter First Name\"\n              name = \"first_name\"\n              onChange={e => onChange(e)}\n              value = {first_name}\n              type=\"text\"\n            />\n          </Form.Group>\n\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              className=\"lastName\"\n              placeholder=\"Enter Last Name\"\n              name = \"last_name\"\n              onChange={e => onChange(e)}\n              value = {last_name}\n              type=\"text\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                  type=\"password\"\n                  id=\"password\"\n                  name = \"password\"\n                  onChange={e => onChange(e)}\n                  value = {password}\n                  placeholder=\"Enter Password\"\n                  required />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                  type=\"password\"\n                  id=\"password\"\n                  name = \"c_password\"\n                  onChange={e => onChange(e)}\n                  value = {c_password}\n                  placeholder=\"Confirm Password\"\n                  required />\n          </Form.Group>\n\n          <Button>\n            Submit\n          </Button>\n      </Form>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Register);\n","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/LoginPage.js",["96","97","98"],[],"import { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { login } from '../actions/auth';\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst LoginPage = ({login}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formData;\n\n    const onChange = e =>setFormData({...formData, [e.target.name] : e.target.value});\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password)\n    };\n\n    // is the user auth\n    // redirect to home page\n  return (\n    <div className = \"color-overlay d-flex justify-content-center align-items-center\">\n          <Form className={\"rounded p-4 p-sm-3\"} onSubmit={e=>onSubmit(e)}>\n              <h1>Sign In</h1>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  placeholder = \"Enter Email\"\n                  type = \"text\"\n                  name = 'email'\n                  value = {email}\n                  onChange = {e=>onChange(e)}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                      type = \"password\"\n                      name = \"password\"\n                      placeholder = \"Enter Password\"\n                      value = {password}\n                      onChange = {e=>onChange(e)}\n                   />\n              </Form.Group>\n\n              <Button>\n                Login\n              </Button>\n              <p>Don't have an account? <Link to={'/register'}>Sign up</Link></p>{''}\n          </Form>\n\n      </div>\n  );\n};\n/*\nconst mapStateToProps = state => ({\n\n})\n*/\n\n\nexport default connect(null, { })(LoginPage);\n","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Settings.js",["99","100","101"],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/components/Navigationbar.js",["102","103","104","105","106","107","108","109","110","111"],[],"import {DropdownButton, Form, Image, Nav, Navbar, NavLink} from \"react-bootstrap\";\nimport {Bell, CircleFill, Gear, HouseDoor, SearchHeart} from \"react-bootstrap-icons\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport React, { Fragment, useState } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst NavigationBar = ({logout, isAuthenticated}) => {\n\nconst [redirect, setRedirect] = useState(false);\n\nconst logout_user = () => {\n    logout();\n    setRedirect(true);\n};\n\nconst guestLinks = () => (\n    <Fragment>\n        <li className='nav-item active'>\n            <Link className='nav-link' to='/'>\n                Welcome\n                <span className='sr-only'>\n                    (current)\n                </span>\n            </Link>\n        </li>\n        <li className='nav-item'>\n            <Link className='nav-link' to='/login'>\n                Login\n            </Link>\n        </li>\n        <li className='nav-item'>\n            <Link className='nav-link' to='/register'>\n                Register\n            </Link>\n        </li>\n    </Fragment>\n);\n\nconst authLinks = () => (\n    <Fragment>\n        <li className='nav-item'>\n            <button type = \"button\" class=\"btn btn-dark\">\n                <Link className='nav-link' to='/home'>\n                    <HouseDoor />\n                </Link>\n            </button>\n        </li>\n        <li className='nav-item'>\n            <button type=\"button\" className=\"btn btn-dark\">\n                <Link className='nav-link' to='/settings'>\n                    <Gear/>\n                </Link>\n            </button>\n        </li>\n        <li className='nav-item'>\n            <button type=\"button\" className=\"btn btn-dark\">\n                <Link className='nav-link' to='/notifications'>\n                    <Bell />\n                </Link>\n            </button>\n        </li>\n        <li className='nav-item'>\n            <button type=\"button\" className=\"btn btn-dark\">\n                <Link className='nav-link' to='/profile'>\n                    <CircleFill />\n                </Link>\n            </button>\n        </li>\n    </Fragment>\n);\nreturn(\n    <Fragment>\n        <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\n            <Link className='navbar-brand' to='/'>Gator Mind</Link>\n            <button\n                className='navbar-toggler'\n                type='button'\n                data-toggle='collapse'\n                data-target='#navbarNav'\n                aria-controls='navbarNav'\n                aria-expanded='false'\n                aria-label='Toggle navigation'\n            >\n                <span className='navbar-toggler-icon'></span>\n            </button>\n            <div className='collapse navbar-collapse' id='navbarNav'>\n                <ul className='navbar-nav ml-auto'>\n                    {isAuthenticated ? authLinks() : guestLinks()}\n                </ul>\n            </div>\n        </nav>\n        {redirect ? <Navigate to='/' /> : <Fragment></Fragment>}\n    </Fragment>\n);\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(NavigationBar);\n\n","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Home.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/App.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/hocs/layout.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/hocs/Layout.js",["112"],[],"import React, { useEffect } from 'react';\nimport Navigationbar from '../components/Navigationbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div>\n            <Navigationbar />\n            {children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n\n","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/store.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/reducers/index.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/reducers/auth.js",["113"],[],"import{\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types'\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user : null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};\n","/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/actions/types.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/actions/auth.js",[],[],"/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/pages/Default.js",["114","115","116"],[],"import React, { useState } from \"react\";\nimport { TextCenter } from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport {Stack} from \"react-bootstrap\";\n\nexport default function Default() {\n    return (\n        <center>\n                <div className=\"p-5 mb-2 rounded-3\">\n                <div className=\"container-fluid py-5\">\n                    <h1 className=\"display-5 fw-bold\">Gator Mind</h1>\n                    <p className=\"col-md-8 fs-4\">A safe space to share</p>\n                    <Stack gap={2} className=\"col-md-4 mx-auto\">\n                        <Button href = '/login'>\n                            Login\n                        </Button>\n                        <Button href = '/register'>\n                            Register\n                        </Button>\n                    </Stack>\n                </div>\n            </div>\n        </center>\n    );\n}\n",{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"117","severity":1,"message":"123","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"124","line":1,"column":9,"nodeType":"119","messageId":"120","endLine":1,"endColumn":12},{"ruleId":"117","severity":1,"message":"125","line":1,"column":14,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"126","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":28},{"ruleId":"117","severity":1,"message":"127","line":1,"column":9,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"128","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":29},{"ruleId":"117","severity":1,"message":"129","line":1,"column":31,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"130","line":1,"column":38,"nodeType":"119","messageId":"120","endLine":1,"endColumn":41},{"ruleId":"117","severity":1,"message":"131","line":1,"column":43,"nodeType":"119","messageId":"120","endLine":1,"endColumn":49},{"ruleId":"117","severity":1,"message":"132","line":1,"column":51,"nodeType":"119","messageId":"120","endLine":1,"endColumn":58},{"ruleId":"117","severity":1,"message":"133","line":2,"column":44,"nodeType":"119","messageId":"120","endLine":2,"endColumn":55},{"ruleId":"117","severity":1,"message":"134","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"135","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"136","line":15,"column":7,"nodeType":"119","messageId":"120","endLine":15,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":10,"column":8,"nodeType":"139","endLine":10,"endColumn":10,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":26,"column":1,"nodeType":"143","endLine":88,"endColumn":2},{"ruleId":"117","severity":1,"message":"144","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"145","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Redirect' is defined but never used.","'login' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'DropdownButton' is defined but never used.","'Form' is defined but never used.","'Image' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'NavLink' is defined but never used.","'SearchHeart' is defined but never used.","'Button' is defined but never used.","'Dropdown' is defined but never used.","'logout_user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["146"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useState' is defined but never used.","'TextCenter' is defined but never used.",{"desc":"147","fix":"148"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"149","text":"150"},[350,352],"[checkAuthenticated, load_user]"]
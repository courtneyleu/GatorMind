{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, PASSWORD_RESET_SUCCESS, PASSWORD_RESET_FAIL, PASSWORD_RESET_CONFIRM_SUCCESS, PASSWORD_RESET_CONFIRM_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL, ACTIVATION_SUCCESS, ACTIVATION_FAIL, LOGOUT } from './types';\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","LOGOUT","axios","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","type","payload","data","load_user","err","localStorage","getItem","get"],"sources":["/Users/mayasingh/Documents/GitHub/GatorMind-Personal/frontend/src/actions/auth.js"],"sourcesContent":["import{\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from './types'\n\nimport axios from \"axios\";\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const load_user = () => async dispatch =>{\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        }\n        catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    }\n    else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n"],"mappings":"AAAA,SACIA,aAAa,EACbC,UAAU,EACVC,mBAAmB,EACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,EAClBC,sBAAsB,EACtBC,mBAAmB,EACnBC,8BAA8B,EAC9BC,2BAA2B,EAC3BC,cAAc,EACdC,WAAW,EACXC,kBAAkB,EAClBC,eAAe,EACfC,MAAM,QACH,SAAS;AAEhB,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EACxD,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEP,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEhD,IAAI;IACA,MAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,mBAAkB,EAAEP,IAAI,EAAEF,MAAM,CAAC;IAE/FD,QAAQ,CAAC;MACLW,IAAI,EAAE9B,aAAa;MACnB+B,OAAO,EAAEN,GAAG,CAACO;IACjB,CAAC,CAAC;IAEFb,QAAQ,CAACc,SAAS,EAAE,CAAC;EACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVf,QAAQ,CAAC;MACLW,IAAI,EAAE7B;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMgC,SAAS,GAAG,MAAM,MAAMd,QAAQ,IAAG;EAC5C,IAAIgB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChC,MAAMhB,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,OAAMc,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;QACxD,QAAQ,EAAE;MACd;IACJ,CAAC;IAED,IAAI;MACA,MAAMX,GAAG,GAAG,MAAMV,KAAK,CAACsB,GAAG,CAAE,GAAEV,OAAO,CAACC,GAAG,CAACC,iBAAkB,iBAAgB,EAAET,MAAM,CAAC;MAEtFD,QAAQ,CAAC;QACLW,IAAI,EAAE5B,mBAAmB;QACzB6B,OAAO,EAAEN,GAAG,CAACO;MACjB,CAAC,CAAC;IACN,CAAC,CACD,OAAOE,GAAG,EAAE;MACRf,QAAQ,CAAC;QACLW,IAAI,EAAE3B;MACV,CAAC,CAAC;IACN;EACJ,CAAC,MACI;IACDgB,QAAQ,CAAC;MACLW,IAAI,EAAE3B;IACV,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module"}
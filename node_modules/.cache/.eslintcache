[{"/home/meryem/repos/GatorMind/src/App.js":"1","/home/meryem/repos/GatorMind/src/components/Navigationbar.js":"2","/home/meryem/repos/GatorMind/src/pages/Default.js":"3","/home/meryem/repos/GatorMind/src/pages/Home.js":"4","/home/meryem/repos/GatorMind/src/components/Post.js":"5","/home/meryem/repos/GatorMind/src/utils/useAxios.js":"6","/home/meryem/repos/GatorMind/src/components/PostList.js":"7","/home/meryem/repos/GatorMind/src/components/Create.js":"8","/home/meryem/repos/GatorMind/src/index.js":"9","/home/meryem/repos/GatorMind/src/reportWebVitals.js":"10","/home/meryem/repos/GatorMind/src/components/Notification.js":"11","/home/meryem/repos/GatorMind/src/pages/Settings.js":"12","/home/meryem/repos/GatorMind/src/pages/Profile.js":"13","/home/meryem/repos/GatorMind/src/pages/Login.js":"14","/home/meryem/repos/GatorMind/src/pages/Regsitration.js":"15","/home/meryem/repos/GatorMind/src/context/AuthContext.js":"16"},{"size":1453,"mtime":1668015977009,"results":"17","hashOfConfig":"18"},{"size":2640,"mtime":1668015101630,"results":"19","hashOfConfig":"18"},{"size":544,"mtime":1667876622817,"results":"20","hashOfConfig":"18"},{"size":481,"mtime":1668556204031,"results":"21","hashOfConfig":"18"},{"size":891,"mtime":1668015341903,"results":"22","hashOfConfig":"18"},{"size":2084,"mtime":1668035304292,"results":"23","hashOfConfig":"18"},{"size":610,"mtime":1668014605712,"results":"24","hashOfConfig":"18"},{"size":2106,"mtime":1668027071352,"results":"25","hashOfConfig":"18"},{"size":547,"mtime":1667317023358,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1667317023362,"results":"27","hashOfConfig":"18"},{"size":119,"mtime":1667317023358,"results":"28","hashOfConfig":"18"},{"size":3786,"mtime":1668555912952,"results":"29","hashOfConfig":"18"},{"size":5151,"mtime":1668555912952,"results":"30","hashOfConfig":"18"},{"size":1378,"mtime":1667317023362,"results":"31","hashOfConfig":"18"},{"size":2368,"mtime":1667317023362,"results":"32","hashOfConfig":"18"},{"size":2257,"mtime":1667317023358,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37"},"14d41lj",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/meryem/repos/GatorMind/src/App.js",["87"],[],"import {BrowserRouter as BrowserRouter, Route, Routes} from 'react-router-dom';\nimport Notifications from './components/Notification';\nimport Settings from './pages/Settings';\nimport Home from './pages/Home';\nimport Navigationbar from './components/Navigationbar';\nimport Login from './pages/Login'\nimport { AuthProvider } from \"./context/AuthContext\";\nimport Profile from './pages/Profile'\nimport Register from \"./pages/Regsitration\";\nimport Default from \"./pages/Default\";\nimport Post from \"./components/Post\"\nimport Create from \"./components/Create\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <AuthProvider>\n                <Navigationbar />\n                <Routes>\n                    <Route exact path='/' element={<Home/>}/>\n                    <Route path='/Notifications' element={<Notifications/>}/>\n                    <Route path='/Settings' element={<Settings/>}/>\n                    <Route path='/Profile' element={<Profile/>}/>\n                    <Route path = \"/Login\" element={<Login/>}/>\n                     <Route path = \"/Register\" element={<Register/>}/>\n                     <Route path = \"/Default\" element={<Default/>}/>\n                     <Route path = \"/posts/:id\" element = {<Post/>}/>\n                     <Route path = \"/create\" element = {<Create/>}/>\n                </Routes>\n            </AuthProvider>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/meryem/repos/GatorMind/src/components/Navigationbar.js",["88","89","90","91","92","93"],[],"import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Nav, Navbar, NavLink, NavItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {useContext, useEffect, useState} from \"react\";\n\nimport{HouseDoor, Bell, Gear, SearchHeart, CircleFill} from \"react-bootstrap-icons\";\n\nimport AuthContext from \"../context/AuthContext\";\nimport Login from \"../pages/Login\";\nimport Registration from \"../pages/Regsitration\";\n\n\nconst Navigationbar = () => {\n    const { user} = useContext(AuthContext);\n    return (\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Toggle aria-controls=\"navbarScroll\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" />\n                    <Navbar.Collapse id=\"navbarScroll\">\n                            <Form className=\"d-flex\">\n                                <Form.Control\n                                type=\"search\"\n                                placeholder=\"Search\"\n                                className=\"me-2\"\n                                aria-label=\"Search\"\n                                />\n                                <Button variant = \"dark\" ><SearchHeart /></Button>\n                        </Form>\n                            <Nav className = \"ms-auto\">\n                                <Button size = \"lg\" variant = \"none\">\n                                    <NavLink  eventKey=\"1\" as={Link} to=\"/\">\n                                        <HouseDoor />\n                                    </NavLink>\n                                </Button>\n                                <Button size = \"lg\" variant = \"none\">\n                                    <NavLink  eventKey=\"2\" as={Link} to=\"/notifications\">\n                                        <Bell />\n                                    </NavLink>\n                                </Button>\n                                <Button size = \"lg\" variant = \"none\">\n                                    <NavLink  eventKey=\"3\" as={Link} to=\"/settings\">\n                                        <Gear />\n                                    </NavLink>\n                                </Button>\n                                <Button size = \"lg\" variant = \"none\">\n                                    <NavLink  eventKey=\"4\" as={Link} to=\"/profile\">\n                                        <CircleFill />\n                                    </NavLink>\n                                </Button>\n                            </Nav>\n                        </Navbar.Collapse>\n                </Navbar>\n    );\n}\n \nexport default Navigationbar;",[],"/home/meryem/repos/GatorMind/src/pages/Default.js",["94","95"],[],"import React, { useState } from \"react\";\nimport { TextCenter } from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Default() {\n  return (\n    <center>\n      <div>\n        <h1>GATOR MIND</h1>\n        <h1>A safe space to share.</h1>\n      </div>\n\n      <Button>\n        <Link to=\"/Login\"></Link>\n        Login\n      </Button>\n      <div></div>\n\n      <Button>\n        <Link to=\"/Register\"></Link>\n        Create Account\n      </Button>\n    </center>\n  );\n}\n","/home/meryem/repos/GatorMind/src/pages/Home.js",[],[],"/home/meryem/repos/GatorMind/src/components/Post.js",[],[],"/home/meryem/repos/GatorMind/src/utils/useAxios.js",["96"],[],"/home/meryem/repos/GatorMind/src/components/PostList.js",[],[],"/home/meryem/repos/GatorMind/src/components/Create.js",[],[],"/home/meryem/repos/GatorMind/src/index.js",[],[],"/home/meryem/repos/GatorMind/src/reportWebVitals.js",[],[],"/home/meryem/repos/GatorMind/src/components/Notification.js",[],[],"/home/meryem/repos/GatorMind/src/pages/Settings.js",["97","98","99"],[],"/home/meryem/repos/GatorMind/src/pages/Profile.js",["100","101","102","103"],[],"/home/meryem/repos/GatorMind/src/pages/Login.js",[],[],"/home/meryem/repos/GatorMind/src/pages/Regsitration.js",["104","105","106","107"],[],"import { useState, useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\n\n\nfunction Register() {\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [isValid, setValid] = useState(false);\n    const { registerUser } = useContext(AuthContext);\n\n    function passwordCheck(){\n        if(password === password2){\n            setValid(true);\n        }\n        else{\n            setValid(false);\n        }\n    }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    registerUser(username, password, password2);\n  };\n\n  return (\n      <div className = \"color-overlay d-flex justify-content-center align-items-center\">\n      <Form className={\"rounded p-4 p-sm-3\"} onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              className=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={e => setEmail(e.target.value)}\n              type=\"text\"\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={e => setPassword(e.target.value)}\n                  placeholder=\"Password\"\n                  required />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={e => setPassword2(e.target.value)}\n                  placeholder=\"Confirm Password\"\n                  required />\n          </Form.Group>\n\n          <Button onClick = {passwordCheck}>\n            Submit\n          </Button>\n      </Form>\n      </div>\n  );\n}\n\nexport default Register;","/home/meryem/repos/GatorMind/src/context/AuthContext.js",[],[],{"ruleId":"108","severity":1,"message":"109","line":1,"column":9,"nodeType":"110","messageId":"111","endLine":1,"endColumn":39,"fix":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":32,"nodeType":"115","messageId":"116","endLine":3,"endColumn":39},{"ruleId":"113","severity":1,"message":"117","line":5,"column":21,"nodeType":"115","messageId":"116","endLine":5,"endColumn":30},{"ruleId":"113","severity":1,"message":"118","line":5,"column":32,"nodeType":"115","messageId":"116","endLine":5,"endColumn":40},{"ruleId":"113","severity":1,"message":"119","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":13},{"ruleId":"113","severity":1,"message":"120","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":20},{"ruleId":"113","severity":1,"message":"121","line":15,"column":13,"nodeType":"115","messageId":"116","endLine":15,"endColumn":17},{"ruleId":"113","severity":1,"message":"118","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"122","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":73,"column":23,"nodeType":"125","messageId":"126","endLine":73,"endColumn":24},{"ruleId":"113","severity":1,"message":"127","line":1,"column":9,"nodeType":"115","messageId":"116","endLine":1,"endColumn":12},{"ruleId":"113","severity":1,"message":"128","line":1,"column":14,"nodeType":"115","messageId":"116","endLine":1,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":1,"column":25,"nodeType":"115","messageId":"116","endLine":1,"endColumn":28},{"ruleId":"113","severity":1,"message":"128","line":1,"column":15,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"130","line":1,"column":31,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":77,"column":15,"nodeType":"133","endLine":77,"endColumn":53},{"ruleId":"131","severity":1,"message":"132","line":80,"column":15,"nodeType":"133","endLine":80,"endColumn":48},{"ruleId":"113","severity":1,"message":"134","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"135","line":9,"column":12,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"136","line":10,"column":22,"nodeType":"115","messageId":"116","endLine":10,"endColumn":33},{"ruleId":"113","severity":1,"message":"137","line":13,"column":12,"nodeType":"115","messageId":"116","endLine":13,"endColumn":19},"no-useless-rename","Import BrowserRouter unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"138","text":"139"},"no-unused-vars","'NavItem' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Login' is defined but never used.","'Registration' is defined but never used.","'user' is assigned a value but never used.","'TextCenter' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Alert' is defined but never used.","'email' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'isValid' is assigned a value but never used.",[8,38],"BrowserRouter"]